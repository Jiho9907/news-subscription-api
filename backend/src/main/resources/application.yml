# 스프링 부트 핵심 설정 모음

# 📋 로깅 설정
logging:
  pattern:
    # 🎨 컬러 로깅 패턴: 로그 레벨, 쓰레드, 로거명, 메시지 등 포함
    console: |
      ${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

  level:
    org.hibernate.SQL: debug                # 🔍 SQL 로그 출력
    org.hibernate.orm.jdbc.bind: trace      # 🧷 SQL 바인딩 파라미터 추적
    com.cjh.news_subscription_api: debug               # 📦 프로젝트 전체 디버깅 레벨 설정

spring:
  application:
    name: news-subscription-api
  datasource:
    url: jdbc:mariadb://localhost:3306/news_db
    username: root
    password: 2648
    driver-class-name: org.mariadb.jdbc.Driver

  # JPA (Hibernate) 설정
  jpa:
    hibernate:
      ddl-auto: update  # 개발시 update
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  redis:
    host: localhost
    port: 6379
  main:
    allow-bean-definition-overriding: false

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
            redirect-uri: "http://localhost:8080/api/auth/google/callback"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

jwt:
  secret: ${JWT_SECRET}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION}
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}

server:
  port: 8080

naver:
  client-id: 0iHGHJzHTQx8yvCjKN40
  client-secret: 1A86Qz7R2S
  api-url: https://openapi.naver.com/v1/search/news.json
